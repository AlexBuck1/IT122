<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title>React App Demo</title>

  <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
</head>
<body>

<h2>Home</h2>

<hr>

<div id="root"></div>
<script type="text/babel">

const Albums = (props) => {
        // props is an array
        const listItems = props.data.map((item) =>
        <li key={item._id} id={item._id} onClick={props.clickHandler}>
            {item.title}
        </li>);
        return <ul>{listItems}</ul>
    }

    const ItemDetail = (props) => {
        return <div>
        <hr />
            <h3>Album Details</h3>
            <form>
                title: <input type="text" name="title" value={props.item.title || ""} onChange={props.handleChange} /><br/>
                artist: <input type="text" name="artist" value={props.item.artist || ""} onChange={props.handleChange}/><br/>
                label: <input type="text" name="label" value={props.item.label || ""} onChange={props.handleChange} /><br/>
                releaseDate: <input type="text" name="releaseDate" value={props.item.releaseDate || ""} onChange={props.handleChange} /><br/>
            </form>
            <button name="save" onClick={props.saveItem}>Save</button>&nbsp;
            <button name="clear" onClick={props.clearForm}>Clear</button>&nbsp;
            <button name="delete" onClick={props.deleteItem}>Delete</button>&nbsp;
        </div>
    }


    const AlbumApp = (props) => {
        const [items, setItems] = React.useState([]);
        const [currentItem, setCurrentItem] = React.useState({});

        React.useEffect(() => {
          const fetchData = async () => {
            fetch("/api/albums").then(res => res.json())
            .then((json) => {
              setItems(json);
            })
          }
          fetchData()
        }, []);
          
        // list click event handler
        const selectItem = (event) => {
            const found = items.find((item) => {
                return item.title === event.target.innerText;
            });
            setCurrentItem(found);
        }

        const clearForm = () => {
            setCurrentItem({});
        }

        const saveItem = () => {
          if (!currentItem.title) {
            return;
          }
          fetch("/api/add/", {
            method: "POST",
            headers: { 'Content-Type': 'application/json'},
            body: JSON.stringify(currentItem)
          })
          .then(res => res.json())
          .then((data) => {
            // if an item doesnt have an id, then it wasnt saved in DB before
            if (!currentItem._id) {
              currentItem._id = data._id;
              setCurrentItem(currentItem);
              // update the item list
              let newItems = [...items];
              newItems.push(currentItem);
              setItems(newItems);
            }
          })
        }

        const deleteItem = () => {
          let id = currentItem._id;

          fetch(`/api/delete/${id}`)
          .then(res => res.json())
          .then((data) => {
            const newItems = items.filter((item) => {
              return item._id !== id;
            });
          setItems(newItems);

          setCurrentItem({})
          });
        }

        // update list state
        const handleChange = (event) => {
          let newItem = { ...currentItem } ;
          newItem[event.target.name] = event.target.value;
          // update currentItem state
          setCurrentItem(newItem);
          // update list state
          items.find((item, index) => {
            if (item._id == newItem._id) {
                items[index] = newItem;
                setItems(items);
            }
          })
        }

        return (
            <div> <h2>Albums Inventory</h2>
                <Albums data={items} clickHandler={selectItem} />
                <ItemDetail
                  item={currentItem}
                  handleChange={handleChange}
                  clearForm={clearForm}
                  saveItem={saveItem}
                  deleteItem={deleteItem}
                />
            </div>
        );

    }

    ReactDOM.render(<AlbumApp />, document.getElementById('root'));
</script>
</body>
</html>
